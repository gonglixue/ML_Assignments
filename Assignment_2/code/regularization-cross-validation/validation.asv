%% Ridge Regression
load('digit_train', 'X', 'y');

% Do feature normalization
X = zscore(X,0,2);
N = size(X,2);
% Do LOOCV
lambdas = [1e-3, 1e-2, 1e-1, 0, 1, 1e1, 1e2, 1e3];
lambda = 0;
% error? square loss or the numbers of misclassified sample?
Min_Error = size(X,2);
for i = 1:length(lambdas)
    E_val = 0;
    for j = 1:size(X, 2)  % for each sample
        X_ = X; 
        X_(:,j) = [];
        y_ = y; % take point j out of X(P by N)
        y_(:,j) = [];
        w = ridge(X_, y_, lambdas(i));
        
        x_pick = [1; X(:,j)];
        if sign(w'*x_pick) ~= y(j)
            E_val = E_val + 1;
        end
    end
    % Update lambda according validation error
    if E_val < Min_Error
        lambda = lambdas(i);
        Min_Error = E_val
    end
end

lambda
% with and without regularization
w_with_reg = ridge(X, y, lambda);
w_without_reg = ridge(X, y, 0);
sum1 = w_with_reg' * w_with_reg
sum2 = w_without_reg' * w_without_reg

% Compute training error
% without reg
y_train_noreg = sign(w_without_reg' * [ones(1,N);X]);
train_error_rate_noreg = sum(y_train_noreg ~= y)/N
% with reg
y_train_reg = sign(w_with_reg' * [ones(1,N); X]);
train_error_rate_reg = sum(y_train_reg ~= y)/N

load('digit_test', 'X_test', 'y_test');
N_test = size(X_test, 2);
% Do feature normalization
X_test = zscore(X_test, 0, 2);
% Compute test error
% without reg
y_test_noreg = sign(w_without_reg' * [ones(1,N_test); X_test]);
test_error_rate_noreg = sum(y_test_noreg ~= y_test)/N_test
% with reg
y_test_reg = sign(w_with_reg' * [ones(1,N_test); X_test]);
test_error_rate_reg = sum(y_test_reg ~= y_test)/N_test

%% Logistic
lambda = lambdas(1);
Min_Error = N;

for i=1:length(lambdas)
    E_val = 0;
    for j=1:N
        X_ = X; 
        X_(:,j) = [];
        y_ = y; % take point j out of X(P by N)
        y_(:,j) = [];
        w = logistic_r(X_, y_, lambda(i));
        
        x_pick = [1; X(:,j)];
        y_pick = 1 ./ (1+exp(-1*x_pick'*w)); 
        if sign(2*y_pick - 1) ~= y(j)
            E_val = E_val + 1;
        end
    end
    % Update lambda according validation error
    if E_val < Min_Error
        lambda = lambdas(i);
        Min_Error = E_val
    end
end

lambda

w_with_reg = logistic_r(X, y, lambda);
w_without_reg = logistic(X, y);

%training error
y_train_noreg = sigmoid(w_without_reg, [ones(1,N);X]');

        

%% SVM with slack variable
